[{"/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/index.js":"1","/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/components/Charts.jsx":"2","/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/components/Navbar.jsx":"3","/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/components/Chart.jsx":"4","/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/hooks/useDarkMode.js":"5","/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/hooks/useLocalStorage.js":"6"},{"size":948,"mtime":1606920776996,"results":"7","hashOfConfig":"8"},{"size":585,"mtime":1606917840057,"results":"9","hashOfConfig":"8"},{"size":457,"mtime":1606917840057,"results":"10","hashOfConfig":"8"},{"size":999,"mtime":1606917840057,"results":"11","hashOfConfig":"8"},{"size":197,"mtime":1606920789763,"results":"12","hashOfConfig":"8"},{"size":487,"mtime":1606920877878,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h4w8e0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/index.js",[],"/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/components/Charts.jsx",[],["28","29"],"/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/components/Navbar.jsx",["30"],"import React, { useState } from 'react';\n\nconst Navbar = (props) => {\n  const toggleMode = e => {\n    e.preventDefault();\n    props.setDarkMode(!props.darkMode);\n  };\n  return (\n    <nav className=\"navbar\">\n      <h1>Crypto Tracker</h1>\n      <div className=\"dark-mode__toggle\">\n        <div\n          onClick={toggleMode}\n          className={props.darkMode ? 'toggle toggled' : 'toggle'}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/components/Chart.jsx",[],"/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/hooks/useDarkMode.js",[],"/Users/brennanlawrence/Documents/code/Lambda/dark-mode/src/hooks/useLocalStorage.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]